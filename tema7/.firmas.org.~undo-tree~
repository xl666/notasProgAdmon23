(undo-tree-save-format-version . 1)
"85bcfe21f402c56210004ca0a08d40373b5f16ed"
[nil nil nil nil (25954 15811 507400 193000) 0 nil]
([nil nil ((1 . 3) (t 25954 15811 511808 784000)) nil (25954 15883 789750 71000) 0 nil])
([nil nil ((3 . 21)) nil (25954 15883 789747 207000) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-1 wrap-prefix "" line-prefix "" fontified nil)) . 20) (undo-tree-id2 . -1) (21 . 22)) nil (25954 15883 789744 833000) 0 nil])
([nil nil ((21 . 25)) nil (25954 15883 789740 433000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 47 53 nil nil nil nil #s(yas--field 2 92 104 nil nil nil nil #s(yas--exit 105 nil))) #s(yas--field 2 92 104 nil nil nil nil #s(yas--exit 105 nil))) #s(yas--exit 105 nil) 0 nil #s(yas--field 2 92 104 nil nil nil nil #s(yas--exit 105 nil)) nil nil)) (21 . 115) (#("bash" 0 4 (wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"26 27 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"26 27 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) fontified t)) . 21) (undo-tree-id0 . -4) (undo-tree-id1 . -4) 25) nil (25954 15883 789737 81000) 0 nil])
([nil nil ((apply yas--snippet-revive 21 115 #s(yas--snippet nil (#s(yas--field 1 47 53 nil nil nil nil #s(yas--field 2 92 104 nil nil nil nil #s(yas--exit 105 nil))) #s(yas--field 2 92 104 nil nil nil nil #s(yas--exit 105 nil))) #s(yas--exit 105 nil) 0 nil #s(yas--field 2 92 104 nil nil nil nil #s(yas--exit 105 nil)) nil nil))) nil (25954 15883 789686 655000) 0 nil])
([nil nil ((nil rear-nonsticky nil 172 . 173) (nil fontified nil 169 . 173) (nil fontified nil 164 . 169) (nil fontified nil 160 . 164) (nil fontified nil 150 . 160) (nil fontified nil 148 . 150) (nil fontified nil 146 . 148) (nil fontified nil 143 . 146) (nil fontified nil 136 . 143) (nil fontified nil 133 . 136) (nil fontified nil 129 . 133) (nil fontified nil 127 . 129) (nil fontified nil 123 . 127) (nil fontified nil 120 . 123) (nil fontified nil 117 . 120) (nil fontified nil 111 . 117) (nil fontified nil 108 . 111) (nil fontified nil 106 . 108) (nil fontified nil 105 . 106) (105 . 173)) nil (25954 15883 789683 722000) 0 nil])
([nil nil ((2 . 4)) nil (25954 15883 789677 506000) 0 nil])
([nil nil ((2 . 18)) nil (25954 15883 789675 61000) 0 nil])
([nil nil ((201 . 202) 18) nil (25954 15883 789667 30000) 0 nil])
([nil nil ((18 . 19) (t 25954 15883 798078 784000)) nil (25954 15888 240801 557000) 0 nil])
([nil nil ((19 . 23)) nil (25954 15888 240799 182000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 45 51 nil nil nil nil #s(yas--field 2 90 102 nil nil nil nil #s(yas--exit 103 nil))) #s(yas--field 2 90 102 nil nil nil nil #s(yas--exit 103 nil))) #s(yas--exit 103 nil) 1 nil #s(yas--field 2 90 102 nil nil nil nil #s(yas--exit 103 nil)) nil nil)) (19 . 113) (#("bash" 0 4 (wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) fontified t)) . 19) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -2) (undo-tree-id14 . -1) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -3) (undo-tree-id25 . -2) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -4) (undo-tree-id36 . -3) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -4) (undo-tree-id69 . -4) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -4) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -4) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) 23) nil (25954 15888 240794 363000) 0 nil])
([nil nil ((apply yas--snippet-revive 19 113 #s(yas--snippet nil (#s(yas--field 1 45 51 nil nil nil nil #s(yas--field 2 90 102 nil nil nil nil #s(yas--exit 103 nil))) #s(yas--field 2 90 102 nil nil nil nil #s(yas--exit 103 nil))) #s(yas--exit 103 nil) 1 nil #s(yas--field 2 90 102 nil nil nil nil #s(yas--exit 103 nil)) nil nil))) nil (25954 15888 240700 78000) 0 nil])
([nil nil ((nil rear-nonsticky nil 116 . 117) (nil fontified nil 116 . 117) (nil fontified nil 112 . 116) (nil fontified nil 109 . 112) (nil fontified nil 106 . 109) (nil fontified nil 104 . 106) (nil fontified nil 103 . 104) (103 . 117) (t 25954 15888 238054 420000)) nil (25954 15941 119584 449000) 0 nil])
([nil nil ((#("`" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . -116) (undo-tree-id113 . -1) 117) nil (25954 15941 119580 608000) 0 nil])
([nil nil ((116 . 117)) nil (25954 15941 119576 697000) 0 nil])
([nil nil ((103 . 105)) nil (25954 15941 119574 741000) 0 nil])
([nil nil ((119 . 121)) nil (25954 15941 119572 366000) 0 nil])
([nil nil ((nil rear-nonsticky nil 136 . 137) (nil fontified nil 136 . 137) (nil fontified nil 131 . 136) (nil fontified nil 127 . 131) (nil fontified nil 124 . 127) (nil fontified nil 122 . 124) (nil fontified nil 121 . 122) (121 . 137)) nil (25954 15941 119570 481000) 0 nil])
([nil nil ((137 . 140)) nil (25954 15941 119567 617000) 0 nil])
([nil nil ((140 . 144) 103) nil (25954 15942 100210 716000) 0 nil])
([nil nil ((#("`" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . -136) (undo-tree-id164 . -1) 137) nil (25954 15957 711524 397000) 0 nil] [nil nil ((122 . 124)) ((#("re" 0 1 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 1 2 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . 122) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2)) (25954 15941 120391 814000) 0 nil])
([nil nil ((#("    " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) fontified t)) . 139) (undo-tree-id163 . -4) 103) nil (25954 15957 711519 578000) 0 nil])
([nil nil ((#("e" 0 1 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . -123) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 124) ((123 . 124)) (25954 15941 119556 303000) 0 nil])
([nil nil ((nil rear-nonsticky nil 182 . 183) (nil fontified nil 182 . 183) (nil fontified nil 179 . 182) (nil fontified nil 176 . 179) (nil fontified nil 174 . 176) (nil fontified nil 168 . 174) (nil fontified nil 165 . 168) (nil fontified nil 163 . 165) (nil fontified nil 161 . 163) (nil fontified nil 158 . 161) (nil fontified nil 151 . 158) (nil fontified nil 145 . 151) (nil fontified nil 142 . 145) (nil fontified nil 140 . 142) (nil fontified nil 139 . 140) (139 . 183)) nil (25954 16041 378867 988000) 0 nil])
nil
([nil nil ((183 . 186) (t 25954 15957 711006 524000)) nil (25954 16056 849011 409000) 0 nil] [nil nil ((nil rear-nonsticky nil 195 . 196) (nil fontified nil 195 . 196) (nil fontified nil 192 . 195) (nil fontified nil 189 . 192) (nil fontified nil 187 . 189) (nil fontified nil 182 . 187) (nil fontified nil 175 . 182) (nil fontified nil 169 . 175) (nil fontified nil 166 . 169) (nil fontified nil 162 . 166) (nil fontified nil 159 . 162) (nil fontified nil 151 . 159) (nil fontified nil 145 . 151) (nil fontified nil 142 . 145) (nil fontified nil 140 . 142) (nil fontified nil 139 . 140) (139 . 196) (t 25954 15957 711006 524000)) ((#("gpg --output privatekey.asc --export-secret-keys <key-id>" 0 1 (src-block t face (font-lock-function-name-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 1 3 (src-block t face (font-lock-function-name-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 3 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 4 6 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 6 12 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 12 13 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 13 20 (src-block t face (font-lock-variable-name-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 20 23 (src-block t face (font-lock-variable-name-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 23 27 (src-block t face (font-lock-variable-name-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 27 28 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 28 30 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 30 36 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",};" :mask heuristic :ascent center)))) 36 43 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 43 48 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 48 49 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 49 50 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 50 53 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 53 54 (src-block t face (font-lock-warning-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 54 56 (src-block t face (font-lock-variable-name-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center)))) 56 57 (src-block t face (font-lock-warning-face org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky nil fontified nil wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))))) . 139) (undo-tree-id165 . -57) (undo-tree-id166 . -57) (undo-tree-id167 . -57) (nil rear-nonsticky t 195 . 196)) (25954 16041 377203 461000) 0 nil])
([nil nil ((nil rear-nonsticky nil 242 . 243) (nil fontified nil 242 . 243) (nil fontified nil 239 . 242) (nil fontified nil 236 . 239) (nil fontified nil 234 . 236) (nil fontified nil 229 . 234) (nil fontified nil 222 . 229) (nil fontified nil 216 . 222) (nil fontified nil 213 . 216) (nil fontified nil 209 . 213) (nil fontified nil 206 . 209) (nil fontified nil 198 . 206) (nil fontified nil 192 . 198) (nil fontified nil 189 . 192) (nil fontified nil 187 . 189) (nil fontified nil 186 . 187) (186 . 243)) nil (25954 16056 849008 965000) 0 nil])
nil
([nil nil ((255 . 256)) nil (25954 16056 849004 216000) 0 nil])
([nil nil ((255 . 263)) nil (25954 16056 848996 114000) 0 nil])
([nil nil ((263 . 264) (t 25954 16056 850462 502000)) nil (25954 16170 623032 110000) 0 nil])
([nil nil ((264 . 268)) nil (25954 16170 623029 247000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 290 296 nil nil nil nil #s(yas--field 2 335 347 nil nil nil nil #s(yas--exit 348 nil))) #s(yas--field 2 335 347 nil nil nil nil #s(yas--exit 348 nil))) #s(yas--exit 348 nil) 2 nil #s(yas--field 2 335 347 nil nil nil nil #s(yas--exit 348 nil)) nil nil)) (264 . 358) (#("bash" 0 4 (wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) fontified t)) . 264) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) 268) nil (25954 16170 623026 383000) 0 nil])
([nil nil ((apply yas--snippet-revive 264 358 #s(yas--snippet nil (#s(yas--field 1 290 296 nil nil nil nil #s(yas--field 2 335 347 nil nil nil nil #s(yas--exit 348 nil))) #s(yas--field 2 335 347 nil nil nil nil #s(yas--exit 348 nil))) #s(yas--exit 348 nil) 2 nil #s(yas--field 2 335 347 nil nil nil nil #s(yas--exit 348 nil)) nil nil))) nil (25954 16170 623018 631000) 0 nil])
([nil nil ((nil rear-nonsticky nil 373 . 374) (nil fontified nil 370 . 374) (nil fontified nil 363 . 370) (nil fontified nil 359 . 363) (nil fontified nil 354 . 359) (nil fontified nil 351 . 354) (nil fontified nil 349 . 351) (nil fontified nil 348 . 349) (348 . 374)) nil (25954 16170 623016 256000) 0 nil])
([nil nil ((374 . 375)) nil (25954 16170 623013 882000) 0 nil])
([nil nil ((nil rear-nonsticky nil 406 . 407) (nil fontified nil 405 . 407) (nil fontified nil 403 . 405) (nil fontified nil 400 . 403) (nil fontified nil 394 . 400) (nil fontified nil 393 . 394) (nil fontified nil 391 . 393) (nil fontified nil 390 . 391) (nil fontified nil 386 . 390) (nil fontified nil 385 . 386) (nil fontified nil 384 . 385) (nil fontified nil 380 . 384) (nil fontified nil 377 . 380) (nil fontified nil 375 . 377) (375 . 407)) nil (25954 16170 623011 437000) 0 nil])
([nil nil ((#("public" 0 6 (face (font-lock-negation-char-face org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) . -394) (undo-tree-id168 . -6) (undo-tree-id169 . -6) (undo-tree-id170 . -6) 400) nil (25954 16170 623006 688000) 0 nil])
([nil nil ((394 . 401)) nil (25954 16170 622984 269000) 0 nil])
([nil nil ((#("c" 0 1 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . -212) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) 213 (t 25954 16170 626504 828000)) nil (25954 16409 869433 341000) 0 nil])
([nil nil ((#("s" 0 1 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . -211) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) 212) nil (25954 16409 869422 585000) 0 nil])
([nil nil ((#("a" 0 1 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . -210) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) 211) nil (25954 16409 869404 7000) 0 nil])
([nil nil ((210 . 213)) nil (25954 16409 869352 255000) 0 nil])
([nil nil ((245 . 247) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) fontified nil)) . 244) (undo-tree-id239 . -2) (243 . 247) (t 25954 16409 871858 649000)) nil (25954 17293 549039 606000) 0 nil])
([nil nil ((nil rear-nonsticky nil 305 . 306) (nil font-lock-face (:foreground "#5faaef" :extend t) 289 . 306) (nil fontified nil 289 . 306) (nil font-lock-face (:extend t) 288 . 289) (nil fontified nil 288 . 289) (nil font-lock-face (:foreground "#5faaef" :extend t) 284 . 288) (nil fontified nil 284 . 288) (nil font-lock-face (:extend t) 283 . 284) (nil fontified nil 283 . 284) (nil font-lock-face (:foreground "#5faaef" :extend t) 276 . 283) (nil fontified nil 276 . 283) (nil font-lock-face (:extend t) 275 . 276) (nil fontified nil 275 . 276) (nil font-lock-face (:foreground "#5faaef" :extend t) 265 . 275) (nil fontified nil 265 . 275) (nil font-lock-face (:extend t) 263 . 265) (nil fontified nil 263 . 265) (nil font-lock-face (:foreground "#5faaef" :extend t) 256 . 263) (nil fontified nil 256 . 263) (nil font-lock-face (:extend t) 254 . 256) (nil fontified nil 254 . 256) (nil font-lock-face (:foreground "#3f90f0" :extend t) 248 . 254) (nil fontified nil 248 . 254) (nil font-lock-face (:foreground "#3f90f0" :extend t) 247 . 248) (nil fontified nil 247 . 248) (247 . 306)) nil (25954 17293 549017 187000) 0 nil])
([nil nil ((653 . 654) (t 25954 17293 553676 160000)) nil (25954 17347 6176 718000) 0 nil])
([nil nil ((656 . 659) (585 . 587)) nil (25954 17347 6173 855000) 0 nil])
([nil nil ((nil rear-nonsticky nil 727 . 728) (nil fontified nil 724 . 728) (nil fontified nil 719 . 724) (nil fontified nil 716 . 719) (nil fontified nil 713 . 716) (nil fontified nil 711 . 713) (nil fontified nil 707 . 711) (nil fontified nil 697 . 707) (nil fontified nil 694 . 697) (nil fontified nil 692 . 694) (nil fontified nil 688 . 692) (nil fontified nil 685 . 688) (nil fontified nil 677 . 685) (nil fontified nil 673 . 677) (nil fontified nil 671 . 673) (nil fontified nil 669 . 671) (nil fontified nil 666 . 669) (nil fontified nil 659 . 666) (659 . 728)) nil (25954 17347 6164 636000) 0 nil])
([nil nil ((244 . 247) (t 25954 17347 10049 487000)) nil (25954 17413 568894 759000) 0 nil])
([nil nil ((nil rear-nonsticky nil 324 . 325) (nil font-lock-face (:foreground "#5faaef" :extend t) 305 . 325) (nil fontified nil 305 . 325) (nil font-lock-face (:extend t) 304 . 305) (nil fontified nil 304 . 305) (nil font-lock-face (:foreground "#5faaef" :extend t) 296 . 304) (nil fontified nil 296 . 304) (nil font-lock-face (:extend t) 295 . 296) (nil fontified nil 295 . 296) (nil font-lock-face (:foreground "#5faaef" :underline t :extend t) 283 . 295) (nil fontified nil 283 . 295) (nil font-lock-face (:extend t) 282 . 283) (nil fontified nil 282 . 283) (nil font-lock-face (:foreground "#5faaef" :extend t) 278 . 282) (nil fontified nil 278 . 282) (nil font-lock-face (:extend t) 277 . 278) (nil fontified nil 277 . 278) (nil font-lock-face (:foreground "#5faaef" :extend t) 274 . 277) (nil fontified nil 274 . 277) (nil font-lock-face (:extend t) 273 . 274) (nil fontified nil 273 . 274) (nil font-lock-face (:foreground "#5faaef" :extend t) 263 . 273) (nil fontified nil 263 . 273) (nil font-lock-face (:extend t) 262 . 263) (nil fontified nil 262 . 263) (nil font-lock-face (:foreground "#5faaef" :extend t) 255 . 262) (nil fontified nil 255 . 262) (nil font-lock-face (:extend t) 254 . 255) (nil fontified nil 254 . 255) (nil font-lock-face (:foreground "#3f90f0" :extend t) 248 . 254) (nil fontified nil 248 . 254) (nil font-lock-face (:foreground "#3f90f0" :extend t) 247 . 248) (nil fontified nil 247 . 248) (247 . 325)) nil (25954 17413 568890 988000) 0 nil])
([nil nil ((#("  openssl  genpkey  -algorithm ED25519 -out localhost_key.pem" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 3 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t rear-nonsticky t vterm-prompt t) 3 9 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 9 11 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 11 18 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 18 20 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 20 30 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 30 31 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 31 38 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 38 39 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 39 43 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 43 44 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 44 60 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 60 61 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t)) . 326) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -61) (undo-tree-id243 . -2) (undo-tree-id244 . -61) (undo-tree-id245 . -61) (undo-tree-id246 . -61) (undo-tree-id247 . -61) (undo-tree-id248 . -2) (undo-tree-id249 . -61) (undo-tree-id250 . -61) (undo-tree-id251 . -61) (undo-tree-id252 . -61) (undo-tree-id253 . -61) (undo-tree-id254 . -61) (undo-tree-id255 . -61) (undo-tree-id256 . -61) (undo-tree-id257 . -61) (undo-tree-id258 . -61) (undo-tree-id259 . -61) (undo-tree-id260 . -61) (undo-tree-id261 . -61) (undo-tree-id262 . -61) (undo-tree-id263 . -61) (undo-tree-id264 . -61) (undo-tree-id265 . -61) (undo-tree-id266 . -61) (undo-tree-id267 . -61) (undo-tree-id268 . -61) (undo-tree-id269 . -61) (undo-tree-id270 . -61) (undo-tree-id271 . -61) (undo-tree-id272 . -61) (undo-tree-id273 . -61) (undo-tree-id274 . -61) (undo-tree-id275 . -61) (undo-tree-id276 . -61) (undo-tree-id277 . -61) (undo-tree-id278 . -61) (undo-tree-id279 . -61) (undo-tree-id280 . -61) (undo-tree-id281 . -61) (undo-tree-id282 . -61) (undo-tree-id283 . -61) (undo-tree-id284 . -61) (undo-tree-id285 . -61) (undo-tree-id286 . -23) (undo-tree-id287 . -23) (undo-tree-id288 . -23) (undo-tree-id289 . -23) (undo-tree-id290 . -23) (undo-tree-id291 . -23) (undo-tree-id292 . -23) (undo-tree-id293 . -23) (undo-tree-id294 . -23) (undo-tree-id295 . -23) (undo-tree-id296 . -23) (undo-tree-id297 . -23) (undo-tree-id298 . -23) (undo-tree-id299 . -23) (undo-tree-id300 . -23) (undo-tree-id301 . -23) (undo-tree-id302 . -23) (undo-tree-id303 . -23)) nil (25954 17413 568877 369000) 0 nil])
([nil nil ((748 . 751) (t 25954 17413 573017 560000)) nil (25954 17498 813408 22000) 0 nil])
([nil nil ((nil rear-nonsticky nil 826 . 827) (nil fontified nil 823 . 827) (nil fontified nil 818 . 823) (nil fontified nil 815 . 818) (nil fontified nil 812 . 815) (nil fontified nil 810 . 812) (nil fontified nil 806 . 810) (nil fontified nil 796 . 806) (nil fontified nil 787 . 796) (nil fontified nil 785 . 787) (nil fontified nil 781 . 785) (nil fontified nil 778 . 781) (nil fontified nil 771 . 778) (nil fontified nil 765 . 771) (nil fontified nil 763 . 765) (nil fontified nil 761 . 763) (nil fontified nil 758 . 761) (nil fontified nil 751 . 758) (751 . 827)) nil (25954 17498 813405 648000) 0 nil])
([nil nil ((#("openssl dgst -sign privatekey.pem -out signature.bin -sha256 file.txt" 0 7 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 7 8 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 8 10 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 10 12 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 12 13 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 13 14 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 14 18 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 18 19 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 19 26 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 26 29 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 29 33 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 33 34 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 34 35 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 35 38 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 38 39 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 39 48 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 48 52 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 52 53 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 53 54 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 54 57 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 57 60 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 60 61 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 61 65 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 65 68 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 68 69 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . -679) (undo-tree-id430 . -69) (undo-tree-id431 . -69) (undo-tree-id432 . -69) (undo-tree-id433 . -69) 748) nil (25954 17498 813400 759000) 0 nil])
([nil nil ((491 . 492)) nil (25954 17498 813395 32000) 0 nil])
([nil nil ((431 . 433)) nil (25954 17498 813392 588000) 0 nil])
([nil nil ((nil rear-nonsticky nil 569 . 570) (nil fontified nil 566 . 570) (nil fontified nil 561 . 566) (nil fontified nil 558 . 561) (nil fontified nil 555 . 558) (nil fontified nil 553 . 555) (nil fontified nil 549 . 553) (nil fontified nil 539 . 549) (nil fontified nil 530 . 539) (nil fontified nil 528 . 530) (nil fontified nil 524 . 528) (nil fontified nil 521 . 524) (nil fontified nil 514 . 521) (nil fontified nil 508 . 514) (nil fontified nil 506 . 508) (nil fontified nil 504 . 506) (nil fontified nil 501 . 504) (nil fontified nil 494 . 501) (494 . 570)) nil (25954 17498 813390 213000) 0 nil])
([nil nil ((433 . 435) (494 . 498) 431) nil (25954 17498 813385 45000) 0 nil])
([nil nil ((#("g --clearsign myfile.txt --keyring /path/to/privatekey.gpg
" 0 1 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 1 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 2 4 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 4 9 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 9 13 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 13 14 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 14 20 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 20 23 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 23 24 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified nil) 24 25 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil) 25 27 (face (font-lock-builtin-face org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t) 27 30 (face (font-lock-builtin-face org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t) 30 34 (face (font-lock-builtin-face org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t) 34 35 (face (org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t) 35 36 (face (font-lock-keyword-face org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t) 36 40 (face (font-lock-negation-char-face org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t) 40 41 (face (font-lock-keyword-face org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t) 41 43 (face (font-lock-negation-char-face org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t) 43 44 (face (font-lock-keyword-face org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t) 44 51 (face (font-lock-negation-char-face org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t) 51 54 (face (font-lock-negation-char-face org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t) 54 56 (face (font-lock-negation-char-face org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t) 56 57 (face (font-lock-negation-char-face org-block) font-lock-multiline t fontified nil src-block t font-lock-fontified t) 57 58 (face (font-lock-negation-char-face org-block) font-lock-multiline t rear-nonsticky t fontified nil src-block t font-lock-fontified t) 58 59 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 431) (undo-tree-id420 . -59) (undo-tree-id421 . -51) (undo-tree-id422 . -51) (undo-tree-id423 . -50) (undo-tree-id424 . -51) (undo-tree-id425 . -25) (undo-tree-id426 . -58) (undo-tree-id427 . -58) (undo-tree-id428 . -59) (#("    gp" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 4 5 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 5 6 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -431) (undo-tree-id429 . -6) 437) nil (25954 17498 813381 762000) 0 nil])
([nil nil ((#("  gpg --verify --keyring /path/to/publickey.gpg signature.asc file.txt
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 3 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3 5 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 5 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 6 8 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 8 14 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 14 15 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 15 17 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 17 20 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 20 24 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 24 25 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 25 26 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 26 30 (face (font-lock-negation-char-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 30 31 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 31 33 (face (font-lock-negation-char-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 33 34 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 34 40 (face (font-lock-negation-char-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 40 43 (face (font-lock-negation-char-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 43 45 (face (font-lock-negation-char-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 45 47 (face (font-lock-negation-char-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 47 48 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 48 57 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 57 61 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 61 62 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 62 66 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 66 69 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 69 70 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t) 70 71 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 625) (undo-tree-id419 . -15)) nil (25954 17498 813363 45000) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 625)) nil (25954 17498 813359 203000) 0 nil])
([nil nil ((#("  
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 625) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2)) nil (25954 17498 813356 410000) 0 nil])
([nil nil ((#("  gpg --gen-key
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 3 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3 5 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 5 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 6 8 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 8 11 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 11 15 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 15 16 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 103) (undo-tree-id399 . -16) (undo-tree-id400 . -16) (undo-tree-id401 . -16) (undo-tree-id402 . -16) (undo-tree-id403 . -16) (undo-tree-id404 . -16) (undo-tree-id405 . -16) (undo-tree-id406 . -16) (undo-tree-id407 . -16) (undo-tree-id408 . -16) (undo-tree-id409 . -16) (undo-tree-id410 . -16) (undo-tree-id411 . -16) (undo-tree-id412 . -16) (undo-tree-id413 . -16)) nil (25954 17498 813349 356000) 0 nil])
([nil nil ((#("  gpg --list-keys
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 3 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3 5 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 5 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 6 8 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 8 12 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 12 17 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 17 18 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 103) (undo-tree-id367 . -2) (undo-tree-id368 . -2) (undo-tree-id369 . -2) (undo-tree-id370 . -2) (undo-tree-id371 . -17) (undo-tree-id372 . -18) (undo-tree-id373 . -18) (undo-tree-id374 . -11) (undo-tree-id375 . -11) (undo-tree-id376 . -11) (undo-tree-id377 . -11) (undo-tree-id378 . -2) (undo-tree-id379 . -18) (undo-tree-id380 . -18) (undo-tree-id381 . -18) (undo-tree-id382 . -18) (undo-tree-id383 . -18) (undo-tree-id384 . -18) (undo-tree-id385 . -18) (undo-tree-id386 . -18) (undo-tree-id387 . -18) (undo-tree-id388 . -18) (undo-tree-id389 . -18) (undo-tree-id390 . -18) (undo-tree-id391 . -18) (undo-tree-id392 . -18) (undo-tree-id393 . -18) (undo-tree-id394 . -18) (undo-tree-id395 . -18) (undo-tree-id396 . -18) (undo-tree-id397 . -18) (undo-tree-id398 . -18)) nil (25954 17498 813331 127000) 0 nil])
([nil nil ((#("  gpg --output publickey.gpg --export <key-id>
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 3 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3 5 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 5 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 6 8 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 8 14 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 14 15 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 15 21 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 21 24 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 24 26 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 26 28 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 28 29 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 29 31 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 31 37 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 37 38 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 38 39 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 39 42 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 42 43 (face (font-lock-warning-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 43 45 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 45 46 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t) 46 47 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 103) (undo-tree-id340 . -47) (undo-tree-id341 . -2) (undo-tree-id342 . -2) (undo-tree-id343 . -46) (undo-tree-id344 . -2) (undo-tree-id345 . -46) (undo-tree-id346 . -46) (undo-tree-id347 . -46) (undo-tree-id348 . -46) (undo-tree-id349 . -46) (undo-tree-id350 . -46) (undo-tree-id351 . -2) (undo-tree-id352 . -2) (undo-tree-id353 . -2) (undo-tree-id354 . -46) (undo-tree-id355 . -47) (undo-tree-id356 . -47) (undo-tree-id357 . -47) (undo-tree-id358 . -47) (undo-tree-id359 . -47) (undo-tree-id360 . -47) (undo-tree-id361 . -47) (undo-tree-id362 . -47) (undo-tree-id363 . -47) (undo-tree-id364 . -47) (undo-tree-id365 . -47) (undo-tree-id366 . -47)) nil (25954 17498 812645 146000) 0 nil])
([nil nil ((#("  gpg --output privatekey.gpg --export-secret-keys <key-id>
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 3 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3 5 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 5 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 6 8 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 8 14 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 14 15 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 15 22 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 22 25 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 25 29 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 29 30 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 30 32 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 32 38 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 38 45 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 45 50 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 50 51 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 51 52 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 52 55 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 55 56 (face (font-lock-warning-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 56 58 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 58 59 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t) 59 60 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 103) (undo-tree-id322 . -29) (undo-tree-id323 . -28) (undo-tree-id324 . -29) (undo-tree-id325 . -29) (undo-tree-id326 . -29) (undo-tree-id327 . -29) (undo-tree-id328 . -2) (undo-tree-id329 . -60) (undo-tree-id330 . -60) (undo-tree-id331 . -60) (undo-tree-id332 . -60) (undo-tree-id333 . -60) (undo-tree-id334 . -60) (undo-tree-id335 . -60) (undo-tree-id336 . -60) (undo-tree-id337 . -60) (undo-tree-id338 . -60) (undo-tree-id339 . -60)) nil (25954 17498 812622 797000) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 103) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1)) nil (25954 17498 812601 914000) 0 nil])
([nil nil ((nil rear-nonsticky nil 240 . 241) (nil fontified nil 237 . 241) (nil fontified nil 234 . 237) (nil fontified nil 227 . 234) (nil fontified nil 224 . 227) (nil fontified nil 222 . 224) (nil fontified nil 219 . 222) (nil fontified nil 216 . 219) (nil fontified nil 214 . 216) (nil fontified nil 210 . 214) (nil fontified nil 207 . 210) (nil fontified nil 199 . 207) (nil fontified nil 197 . 199) (nil fontified nil 195 . 197) (nil fontified nil 191 . 195) (nil fontified nil 184 . 191) (184 . 241) (t 25954 17498 815883 128000)) nil (25954 17586 189199 706000) 0 nil])
([nil nil ((184 . 186) 103) nil (25954 17586 189195 865000) 0 nil])
([nil nil ((#("demo_key" 0 8 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -141) (undo-tree-id434 . -8) 149) nil (25954 17586 189192 512000) 0 nil])
([nil nil ((141 . 148)) nil (25954 17586 189179 242000) 0 nil])
([nil nil ((148 . 151)) nil (25954 17586 189171 630000) 0 nil])
([nil nil ((430 . 433) (t 25954 17586 192070 322000)) nil (25954 17714 582555 819000) 0 nil])
([nil nil ((#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",\"0000000010000000000000000000000000\",};" :mask heuristic :ascent center))) fontified nil)) . 352) 350) nil (25954 17714 582553 25000) 0 nil])
([nil nil ((nil rear-nonsticky nil 495 . 496) (nil fontified nil 431 . 496) (431 . 496)) nil (25954 17714 582550 231000) 0 nil])
([nil nil ((#("      gpg --clearsign myfile.txt --keyring /path/to/privatekey.gpg" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 2 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 6 9 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 9 10 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 10 21 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 21 22 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 22 32 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 32 33 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 33 42 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 42 43 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 43 44 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 44 48 (face (font-lock-negation-char-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 48 49 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 49 51 (face (font-lock-negation-char-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 51 52 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 52 66 (face (font-lock-negation-char-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 429) (undo-tree-id628 . -2) (undo-tree-id629 . -2)) nil (25954 17714 582547 368000) 0 nil])
([nil nil ((nil rear-nonsticky nil 497 . 498) (nil fontified nil 494 . 498) (nil fontified nil 489 . 494) (nil fontified nil 486 . 489) (nil fontified nil 483 . 486) (nil fontified nil 481 . 483) (nil fontified nil 477 . 481) (nil fontified nil 467 . 477) (nil fontified nil 464 . 467) (nil fontified nil 462 . 464) (nil fontified nil 458 . 462) (nil fontified nil 455 . 458) (nil fontified nil 447 . 455) (nil fontified nil 443 . 447) (nil fontified nil 441 . 443) (nil fontified nil 439 . 441) (nil fontified nil 436 . 439) (nil fontified nil 429 . 436) (429 . 498)) nil (25954 17714 582543 527000) 0 nil])
([nil nil ((#("  openssl dgst -verify publickey.pem -signature signature.bin -sha256 file.txt" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) fontified t) 2 9 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 9 10 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 10 12 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 12 14 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 14 15 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 15 16 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 16 22 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 22 23 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 23 29 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 29 32 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 32 36 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 36 37 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 37 38 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 38 47 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 47 48 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 48 57 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 57 61 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 61 62 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 62 63 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 63 66 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 66 69 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 69 70 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 70 74 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 74 77 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 77 78 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . -350) (undo-tree-id542 . -70) (undo-tree-id543 . -78) (undo-tree-id544 . -70) (undo-tree-id545 . -78) (undo-tree-id546 . -78) (undo-tree-id547 . -78) (undo-tree-id548 . -78) (undo-tree-id549 . -78) (undo-tree-id550 . -78) (undo-tree-id551 . -78) (undo-tree-id552 . -78) (undo-tree-id553 . -78) (undo-tree-id554 . -78) (undo-tree-id555 . -78) (undo-tree-id556 . -78) (undo-tree-id557 . -78) (undo-tree-id558 . -78) (undo-tree-id559 . -78) (undo-tree-id560 . -78) (undo-tree-id561 . -78) (undo-tree-id562 . -78) (undo-tree-id563 . -78) (undo-tree-id564 . -78) (undo-tree-id565 . -78) (undo-tree-id566 . -78) (undo-tree-id567 . -78) (undo-tree-id568 . -78) (undo-tree-id569 . -78) (undo-tree-id570 . -78) (undo-tree-id571 . -78) (undo-tree-id572 . -78) (undo-tree-id573 . -78) (undo-tree-id574 . -78) (undo-tree-id575 . -78) (undo-tree-id576 . -78) (undo-tree-id577 . -78) (undo-tree-id578 . -78) (undo-tree-id579 . -78) (undo-tree-id580 . -78) (undo-tree-id581 . -78) (undo-tree-id582 . -78) (undo-tree-id583 . -78) (undo-tree-id584 . -78) (undo-tree-id585 . -78) (undo-tree-id586 . -78) (undo-tree-id587 . -78) (undo-tree-id588 . -78) (undo-tree-id589 . -78) (undo-tree-id590 . -78) (undo-tree-id591 . -78) (undo-tree-id592 . -78) (undo-tree-id593 . -78) (undo-tree-id594 . -78) (undo-tree-id595 . -78) (undo-tree-id596 . -78) (undo-tree-id597 . -78) (undo-tree-id598 . -78) (undo-tree-id599 . -78) (undo-tree-id600 . -78) (undo-tree-id601 . -78) (undo-tree-id602 . -78) (undo-tree-id603 . -78) (undo-tree-id604 . -78) (undo-tree-id605 . -78) (undo-tree-id606 . -78) (undo-tree-id607 . -78) (undo-tree-id608 . -78) (undo-tree-id609 . -78) (undo-tree-id610 . -78) (undo-tree-id611 . -78) (undo-tree-id612 . -78) (undo-tree-id613 . -78) (undo-tree-id614 . -78) (undo-tree-id615 . -78) (undo-tree-id616 . -78) (undo-tree-id617 . -78) (undo-tree-id618 . -78) (undo-tree-id619 . -78) (undo-tree-id620 . -78) (undo-tree-id621 . -78) (undo-tree-id622 . -78) (undo-tree-id623 . -78) (undo-tree-id624 . -78) (undo-tree-id625 . -78) (undo-tree-id626 . -78) (undo-tree-id627 . -78) 428) nil (25954 17714 582536 822000) 0 nil])
([nil nil ((#("
" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) line-prefix #(" " 0 1 (display (image :type xpm :data "/* XPM */
static char *rule[] = {\"34 41 9 1\",\"1 c #3f3e908ff0ef\",\"2 c #bfbfafaf7a79\",\"3 c #6a6a9f9fffff\",\"4 c #aaaa9f9f3230\",\"5 c #7f7fafafffff\",\"6 c #afaf9a9a6a6a\",\"7 c #7a7a9492dfdf\",\"8 c #c5c49f9fcfcf\",\"0 c None};" :mask heuristic :ascent center))) fontified t)) . -349) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) 350) nil (25954 17714 581866 485000) 0 nil])
([nil nil ((102 . 105) (t 25954 17714 584699 108000)) nil (25956 47683 774727 662000) 0 nil])
([nil nil ((105 . 126)) nil (25956 47683 774727 141000) 0 nil])
([nil nil ((126 . 128)) nil (25956 47683 774726 860000) 0 nil])
([nil nil ((#("o" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) font-lock-fontified t fontified t)) . -127) (undo-tree-id150 . -1) (undo-tree-id151 . -1) 128) nil (25956 47683 774726 400000) 0 nil])
([nil nil ((127 . 128)) nil (25956 47683 774725 217000) 0 nil])
([nil nil ((211 . 214)) nil (25956 47683 774724 887000) 0 nil])
([nil nil ((214 . 215)) nil (25956 47683 774724 546000) 0 nil])
([nil nil ((215 . 231)) nil (25956 47683 774724 166000) 0 nil])
([nil nil ((#("u" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t fontified t)) . -230) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 231) nil (25956 47683 774722 873000) 0 nil])
([nil nil ((230 . 232)) nil (25956 47683 774482 223000) 0 nil])
([nil nil ((230 . 238) (#("pú" 0 2 (face (font-lock-comment-face org-block) font-lock-multiline t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t fontified t)) . -230) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -1) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) 232) nil (25956 47683 774480 691000) 0 nil])
([nil current ((#("s" 0 1 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) fontified t)) . -237) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 238) nil (25956 47683 774442 402000) 0 nil])
nil
